diff --git a/cesm/cesm1_2_1/build.sh b/cesm/cesm1_2_1/build.sh
index d0c79c4..b0af6e0 100755
--- a/cesm/cesm1_2_1/build.sh
+++ b/cesm/cesm1_2_1/build.sh
@@ -2,19 +2,8 @@
 
 function dump_Macros
 {
-    use_comm=$(grep "COMMON_COMPILER" $2)
-    tmp_file=$(mktemp)
-    if [ "${use_comm}" != "" ]; then
-    	cat $1 > ${tmp_file}
-    	cat $2 >> ${tmp_file}
-        sed -i "/COMMON_COMPILER/d" ${tmp_file}
-    else
-    	cat $2 > $3
-    fi
-
-    tmp_makefile=$(mktemp)
-cat > ${tmp_makefile} << EOF
-include ${tmp_file}
+cat > /tmp/makefile << EOF
+include $2
 all:
 	@echo "CPPDEFS += \${CPPDEFS}"
 	@echo 
@@ -64,13 +53,11 @@ all:
 	@echo
 EOF
  
-    make -f ${tmp_makefile} >& $3
+    make -f /tmp/makefile >& $3
     sed -i  "/\<FFLAGS\>/{s# -r8 # #; s# -i4 # #}" $3
     ncpath=$(grep "^NETCDFINC" $1) 
     ncpath=$(echo $ncpath|sed "s#.*-I\(.*\)/include#\1#g")
     echo "NETCDF_PATH := $ncpath" >> $3
-    unlink ${tmp_file}
-    unlink ${tmp_makefile}
 }
 
 
@@ -90,9 +77,17 @@ MYPATH=$(readlink -f "$0")
 MYPATH=$(dirname "$MYPATH")
 # =================================
 
+Macfile=${CASEROOT}/config/common/machine/${MACH}/common_compiler.${MACH}.cfg
+Common=$Macfile
+if [ -f $MYPATH/compiler.cfg ]; then
+   Macfile=$MYPATH/compiler.cfg
+fi
+
 cd $MYPATH/cesm_case_scripts
 
-dump_Macros "$COMMON_COMPILER" "$MACFILE" "Macros.CCPL"
+dump_Macros "$COMMON_COMPILER" "$MACFILE" "Macros"
+
+cat Macros
 
 if [ ! -e "./.env_run.xml" ]; then
    echo "Can't find .env_run.xml file"
@@ -101,7 +96,7 @@ fi
 
 rm -f $Exedir/cesm_bld/cesm.exe
 
-./$CASE_NAME.CCPL.build
+./$CASE_NAME.build
 
 if [ -f $Exedir/cesm_bld/cesm.exe ] ; then
    cp $Exedir/cesm_bld/cesm.exe $EXEC
@@ -109,7 +104,6 @@ else
    exit 1
 fi
 
-
 cd ${CASEROOT}
 find ./ -name "seq_maps.rc" > .temp_file_list
 while read line
@@ -118,4 +112,3 @@ do
 done < .temp_file_list
 rm .temp_file_list
 
-exit 0
diff --git a/cesm/cesm1_2_1/config.sh b/cesm/cesm1_2_1/config.sh
index bc4c902..fbbc073 100755
--- a/cesm/cesm1_2_1/config.sh
+++ b/cesm/cesm1_2_1/config.sh
@@ -63,11 +63,11 @@ change_files_name $PREVIOUS_CASE_NAME\. $CASE_NAME\.
 rm -f  Buildconf/*input_data_list
 
 rewrite_config=1
-if [ -f $MYPATH/../../common/.original.case.conf ]; then
-    if check_cesm_config "$MYPATH/../../common/.original.case.conf"; then
+if [ -f $MYPATH/../../common/.cesm.case.conf ]; then
+    if check_cesm_config "$MYPATH/../../common/.cesm.case.conf"; then
         rewrite_config=0
     else
-        rm -f $MYPATH/../../common/.original.case.conf
+        rm -f $MYPATH/../../common/.cesm.case.conf
     fi
 fi
 
diff --git a/common/system/makedep/makdep.c b/common/system/makedep/makdep.c
index 1a810fe..9d9d737 100644
--- a/common/system/makedep/makdep.c
+++ b/common/system/makedep/makdep.c
@@ -58,7 +58,7 @@ static struct node *suffix_list;      /* List of Fortran suffixes to look for */
 static void check (char *, struct node *, char *, int);
 static int already_found (char *, struct node *);
 
-main (int argc, char **argv)
+int main (int argc, char **argv)
 {
   int lastdot;             /* points to the last . in fname */
   int c;                   /* return from getopt */
diff --git a/common/system/makefile/Makefile.models b/common/system/makefile/Makefile.models
index 655f7dc..ca9f81f 100644
--- a/common/system/makefile/Makefile.models
+++ b/common/system/makefile/Makefile.models
@@ -32,8 +32,8 @@ else
     # list of src files is all .F90 .F .c files in VPATH
     SRCS := $(wildcard $(addsuffix /*.cxx , $(VPATH)) \
 		       $(addsuffix /*.F90, $(VPATH)) \
+		       $(addsuffix /*.For, $(VPATH)) \
 		       $(addsuffix /*.F, $(VPATH)) \
-		       $(addsuffix /*.f, $(VPATH)) \
 		       $(addsuffix /*.f90, $(VPATH)) \
 		       $(addsuffix /*.[cF], $(VPATH)) )
   endif
@@ -45,7 +45,7 @@ INCS  := $(patsubst %,-I%, $(VPATH) )
 RM    := rm
 
 .SUFFIXES:
-.SUFFIXES: .cxx .F90 .f90 .F .f .c .o
+.SUFFIXES: .cxx .For .F90 .f90 .F .f .c .o
 
 all: $(EXEC)
 
@@ -85,7 +85,6 @@ db_flags:
 	@echo "* cc      := $(CC)  $(CFLAGS) $(CPPDEFS) $(INCS) $(INCLDIR) $(CASE_LOCAL_INCL)"
 	@echo "* .F.o    := $(FC)  $(FFLAGS) $(CPPDEFS) $(FIXEDFLAGS) $(INCS) $(INCLDIR) $(CASE_LOCAL_INCL)"
 	@echo "* .F90.o  := $(FC)  $(FFLAGS) $(CPPDEFS) $(FREEFLAGS) $(INCS) $(INCLDIR) $(CASE_LOCAL_INCL)"
-	@echo "* .f.o  := $(FC)  $(FFLAGS) $(CPPDEFS) $(FREEFLAGS) $(INCS) $(INCLDIR) $(CASE_LOCAL_INCL)"
 	@echo "* .f90.o  := $(FC)  $(FFLAGS) $(CPPDEFS) $(FREEFLAGS) $(INCS) $(INCLDIR) $(CASE_LOCAL_INCL)"
 
 #-------------------------------------------------------------------------------
@@ -101,11 +100,7 @@ $(EXEC): $(OBJS)
 .c.o:
 	$(CC) -c $(INCLDIR) $(CASE_LOCAL_INCL) $(INCS) $(CPPDEFS) $(CFLAGS)  $<
 
-
 ifeq ($(CPP),NONE)
-.f.o:
-	$(FC) -c $(INCLDIR) $(CASE_LOCAL_INCL) $(INCS) $(FFLAGS) $(FREEFLAGS)  $(CPPFLAGS) $(CPPDEFS) $<
-
 .f90.o:
 	$(FC) -c $(INCLDIR) $(CASE_LOCAL_INCL) $(INCS) $(FFLAGS) $(FREEFLAGS)  $(CPPFLAGS) $(CPPDEFS) $<
 
@@ -115,11 +110,10 @@ ifeq ($(CPP),NONE)
 .F90.o:
 	$(FC) -c $(INCLDIR) $(CASE_LOCAL_INCL) $(INCS) $(FFLAGS) $(FREEFLAGS)  $(CPPFLAGS) $(CPPDEFS) $<
 
-else
-.f.o:
-	$(CPP) $(CPPFLAGS) $(CPPDEFS) $(INCS) $(INCLDIR) $(CASE_LOCAL_INCL) $< > $*.F 
-	$(FC) -c $(FFLAGS) $(FIXEDFLAGS) $(CPPDEFS) $(INCS) $(INCLDIR) $(CASE_LOCAL_INCL) $*.F  
+.For.o:
+	$(FC) -c $(INCLDIR) $(CASE_LOCAL_INCL) $(INCS) $(FFLAGS) $(FREEFLAGS)  $(CPPFLAGS) $(CPPDEFS) $<
 
+else
 .f90.o:
 	$(CPP) $(CPPFLAGS) $(CPPDEFS) $(INCS) $(INCLDIR) $(CASE_LOCAL_INCL) $< > $*.F90 
 	$(FC) -c $(FFLAGS) $(FIXEDFLAGS) $(CPPDEFS) $(INCS) $(INCLDIR) $(CASE_LOCAL_INCL) $*.F90  
@@ -132,16 +126,20 @@ else
 	$(CPP) $(CPPFLAGS) $(CPPDEFS) $(INCS) $(INCLDIR) $(CASE_LOCAL_INCL) $< > $*.f90
 	$(FC) -c $(FFLAGS) $(FREEFLAGS) $(CPPDEFS) $(INCS) $(INCLDIR) $(CASE_LOCAL_INCL) $*.f90  
 
+.For.o:
+	$(CPP) $(CPPFLAGS) $(CPPDEFS) $(INCS) $(INCLDIR) $(CASE_LOCAL_INCL) $< > $*.f
+	$(FC) -c $(FFLAGS) $(FREEFLAGS) $(CPPDEFS) $(INCS) $(INCLDIR) $(CASE_LOCAL_INCL) $*.f
+
 endif
 
 mostlyclean:
-	$(RM) -f *.f *.f90 *.F90 *.F
+	$(RM) -f *.f *.f90 *.F90 *.F *.For
 
 clean:
-	$(RM) -f *.f *.F *.F90 *.f90 *.d *.$(MOD_SUFFIX) $(OBJS)
+	$(RM) -f *.f *.F *.F90 *.For *.f90 *.d *.$(MOD_SUFFIX) $(OBJS)
 
 realclean:
-	$(RM) -f *.f *.F *.F90 *.f90 *.d *.$(MOD_SUFFIX) $(OBJS) $(EXEC)
+	$(RM) -f *.f *.F *.F90 *.For *.f90 *.d *.$(MOD_SUFFIX) $(OBJS) $(EXEC)
 
 #-------------------------------------------------------------------------------
 # Build & include dependency files
@@ -161,10 +159,10 @@ realclean:
 %.d : %.F
 	@ echo "Building dependency for $@"
 	@ $(DEPGEN) -f $(INCS) $<  > $@
-%.d : %.f
+%.d : %.F90
 	@ echo "Building dependency for $@"
 	@ $(DEPGEN) -f $(INCS) $<  > $@
-%.d : %.F90
+%.d : %.For
 	@ echo "Building dependency for $@"
 	@ $(DEPGEN) -f $(INCS) $<  > $@
 %.d : %.f90
